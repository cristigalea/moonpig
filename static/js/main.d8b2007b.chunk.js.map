{"version":3,"sources":["api/cardsService.js","components/shared/LoadedImage/index.js","components/CardListings/Card.js","components/CardListings/CardGrid.js","components/CardListings/index.js","actions/cardsActions.js","actions/layoutActions.js","actions/constants.js","components/shared/Button/index.js","components/CardDetails/index.js","components/index.js","reducers/cardsReducer.js","reducers/layoutReducer.js","store.js","index.js"],"names":["corsHack","cardsListUrl","concat","cardUrl","LoadedImage","state","isError","isLoaded","onLoadImage","_this","setState","onErrorImage","url","this","props","_this$state","imgStyle","opacity","react_default","a","createElement","className","style","src","onLoad","onError","Component","Card","_ref","id","Link","to","LoadedImage_LoadedImage","CardGrid","cards","items","map","item","index","CardListings_Card","key","imageUrl","CardListings","render","CardListings_CardGrid","getCardsList","withRouter","connect","list","dispatch","type","fetch","then","res","json","response","payload","serverTotal","NumberOfProducts","Products","product","MoonpigProductNo","title","Title","ProductImage","Href","extractCardsListInfo","catch","error","console","Button","text","handler","_ref$type","onClick","CardDetails","componentDidMount","getCardDetails","match","params","_this$props$selected","selected","_this$props$selected$","buyUrl","imageUrls","images","length","shared_Button","href","target","rel","fetchCardDetails","ProductUrl","ImageUrls","image","ImageUrl","extracCardDetailsInfo","App","isSpinnerShowing","Switch","Redirect","exact","from","Route","path","component","layout","initState","reducer","combineReducers","arguments","undefined","action","Object","objectSpread","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","store","BrowserRouter","basename","components","document","getElementById"],"mappings":"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","file":"static/js/main.d8b2007b.chunk.js","sourcesContent":["const corsHack = 'https://cors-escape.herokuapp.com/';\nconst size = 30;\nconst cardsListUrl = `${corsHack}https://search.moonpig.com/api/products?size=${size}&searchFacets=occasion_level_3:occasion%3Ewell%20done%3Enew%20job`;\nconst cardUrl = `${corsHack}https://www.moonpig.com/uk/api/product/product/?mpn=`;\n\nexport const fetchCardsList = () => fetch(cardsListUrl).then(res => res.json());\nexport const fetchCardDetails = id => fetch(`${cardUrl}${id}`).then(res => res.json());","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nexport default class LoadedImage extends Component {\n\n    static propTypes = {\n        url: PropTypes.string\n    };\n\n    state = {\n        isError: false,\n        isLoaded: false\n    };\n\n    onLoadImage = () => {\n        this.setState({\n            isError: false,\n            isLoaded: true\n        });\n    };\n\n    onErrorImage = () => {\n        this.setState({\n            isError: true\n        });\n    };\n\n    render() {\n        const { url } = this.props;\n        const { isLoaded, isError } = this.state;\n        const imgStyle = { opacity: isLoaded && !isError ? 1 : 0 };\n\n        return (\n            <div className=\"image__wrapper\">\n                <img className=\"image__content\" style={imgStyle} src={url} onLoad={this.onLoadImage} onError={this.onErrorImage} />\n                {!isLoaded && !isError && <img className=\"image__loader\" src=\"https://dosrgfkou9o2m.cloudfront.net/cdn/3.0.0.16195/responsivemasterpage/img/3-dots@2x.gif\"/>}\n                {isError && <img className=\"image__error\" src=\"error-image.png\"/>}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport LoadedImage from '../shared/LoadedImage';\nimport './styles.css';\n\nconst Card = ({ url, id }) => (\n    <Link to={`/cards/${id}`} className=\"card\">\n        <LoadedImage url={url} />\n    </Link>\n);\n\nCard.propTypes = {\n    url: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n};\n\nexport default Card;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from './Card';\n\nconst CardGrid = ({ items }) => {\n    const cards = items.map((item, index) => <Card key={index} url={item.imageUrl} id={item.id} />);\n    return (\n        <div className=\"cardGrid\">\n            {cards}\n        </div>\n    );\n};\n\nCardGrid.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CardGrid;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getCardsList } from '../../actions/cardsActions';\nimport CardGrid from './CardGrid';\nimport './styles.css';\n\nclass CardListings extends Component {\n\n    componentDidMount() {\n        this.props.getCardsList();\n    }\n\n    render = () => <CardGrid items={this.props.cards} />;\n};\n\nexport default withRouter(connect(\n    state => ({\n        cards: state.cards.list\n    }),\n    { getCardsList }\n)(CardListings));","import { fetchCardsList, fetchCardDetails } from '../api/cardsService';\nimport { showSpinner, hideSpinner } from './layoutActions';\n\nimport {\n    CARDS_GET_LIST,\n    CARDS_GET_DETAILS\n} from './constants';\n\nconst extractCardsListInfo = response => ({\n    serverTotal: response.NumberOfProducts,\n    list: response.Products.map(product => ({\n        id: product.MoonpigProductNo,\n        title: product.Title,\n        imageUrl: product.ProductImage.Link.Href\n    }))\n});\n\nconst extracCardDetailsInfo = response => ({\n    title: response.Title,\n    buyUrl: response.ProductUrl,\n    imageUrls: response.ImageUrls.map(image => image.ImageUrl)\n});\n\nexport const getCardsList = () => {\n    return dispatch => {\n        dispatch(showSpinner())\n        fetchCardsList().then(response => {\n            dispatch({\n                type: CARDS_GET_LIST,\n                payload: extractCardsListInfo(response)\n            })\n            dispatch(hideSpinner())\n        }).catch(error => {\n            dispatch(hideSpinner())\n            console.error(error)\n        })\n    }\n};\n\nexport const getCardDetails = id => {\n    return dispatch => {\n        dispatch(showSpinner())\n        fetchCardDetails(id).then(response => {\n            dispatch({\n                type: CARDS_GET_DETAILS,\n                payload: extracCardDetailsInfo(response)\n            })\n            dispatch(hideSpinner())\n        }).catch(error => {\n            dispatch(hideSpinner())\n            console.error(error)\n        })\n    }\n}","import {\n    SHOW_SPINNER,\n    HIDE_SPINNER\n} from './constants'\n\nexport const showSpinner = () => ({type: SHOW_SPINNER})\nexport const hideSpinner = () => ({type: HIDE_SPINNER})","export const SHOW_SPINNER = 'SHOW_SPINNER';\nexport const HIDE_SPINNER = 'HIDE_SPINNER';\n\nexport const CARDS_GET_LIST = 'CARDS_GET_LIST';\nexport const CARDS_GET_DETAILS = 'CARDS_GET_DETAILS';","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Button  = ({ text, handler, type ='primary' }) => <div className={`button button__${type}`} onClick={handler}>{text}</div>;\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    handler: PropTypes.func,\n    type: PropTypes.string\n};\n\nexport default Button;","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport LoadedImage from '../shared/LoadedImage';\nimport Button from '../shared/Button';\nimport { getCardDetails } from '../../actions/cardsActions';\nimport './styles.css';\n\nclass CardDetails extends Component {\n\n    componentDidMount = () => this.props.getCardDetails(this.props.match.params.id)\n\n    render() {\n        const { title, buyUrl = '#', imageUrls } = this.props.selected;\n        const images = imageUrls && imageUrls.map((url, index) => <LoadedImage key={`image-${index}`} url={url}/>)\n        return (\n            <div className=\"cardDetails\">\n                <div className=\"cardDetails__images\">{images}</div>\n                <div className=\"cardDetails__info\">\n                    <h3>{title}</h3>\n                    {imageUrls && imageUrls.length && <div className=\"cardDetails__actions\">\n                        <Link to=\"/cards\">\n                            <Button text=\"Back\" type=\"danger\"/>\n                        </Link>\n                        <a href={buyUrl} target=\"_blank\" rel=\"noopener noreferrer\" >\n                            <Button text=\"Buy\"/>\n                        </a>\n                    </div>}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(connect(\n    state => ({\n        selected: state.cards.selected\n    }), { getCardDetails }\n)(CardDetails));","import React, {Component} from 'react';\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './styles.css';\n\nimport CardListings from './CardListings';\nimport CardDetails from './CardDetails';\n\nclass App extends Component {\n    render() {\n        const { isSpinnerShowing } = this.props;\n\n        return (\n            <div className=\"App\">\n                <Link to=\"/\">\n                    <h1 className=\"App__title\">Cards</h1>\n                </Link>\n                <hr />\n                <div>\n                    {isSpinnerShowing && <div className=\"App__loading\">Loading...</div>}\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/cards\" />\n                        <Route path=\"/cards/:id\" component={CardDetails} />\n                        <Route path=\"/cards\" component={CardListings} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        isSpinnerShowing: state.layout.isSpinnerShowing\n    })\n)(App));\n","import {\n    CARDS_GET_LIST,\n    CARDS_GET_DETAILS\n} from '../actions/constants';\n\n\nconst initState = {\n    serverTotal: 0,\n    list: [],\n    selected: {}\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case CARDS_GET_LIST:\n            return { ...state, list: action.payload.list, serverTotal: action.payload.serverTotal, selected: {} }\n        case CARDS_GET_DETAILS:\n            return {...state, selected: action.payload}\n        default:\n            return state\n    }\n};","import { SHOW_SPINNER, HIDE_SPINNER } from '../actions/constants';\n\nconst initState = {\n    isSpinnerShowing: false\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case SHOW_SPINNER:\n            return { ...state, isSpinnerShowing: true }\n        case HIDE_SPINNER:\n            return { ...state, isSpinnerShowing: false }\n        default:\n            return state\n    }\n};","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport cardsReducer from './reducers/cardsReducer';\nimport layoutReducer from './reducers/layoutReducer';\n\nconst reducer = combineReducers({\n    cards: cardsReducer,\n    layout: layoutReducer\n});\n\nexport default createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><Router basename=\"/\"><App /></Router></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}